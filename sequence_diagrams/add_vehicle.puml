@startuml

title Sequence diagram for Add Vehicle

actor User
boundary AddVehicleForm
control AuthMiddleware
control VehicleController
participant VehicleService
participant Database as "UserDB"
participant Database as "VehicleDB"

== Add Vehicle Process ==
User -> AddVehicleForm: (1) Enter vehicle details
activate AddVehicleForm
AddVehicleForm -> AuthMiddleware: (2) Attach authorization token
activate AuthMiddleware
AuthMiddleware -> AuthMiddleware: (3) Validate token
alt Invalid Token
    AuthMiddleware --> AddVehicleForm: (4) Return error "Unauthorized"
    deactivate AuthMiddleware
    AddVehicleForm --> User: (5) Display error message
    deactivate AddVehicleForm
else Valid Token
    AuthMiddleware -> VehicleController: (4) Forward request with user data
    deactivate AuthMiddleware
end

VehicleController -> VehicleService: (5) Process add vehicle request
activate VehicleService
VehicleService -> VehicleService: (6) Validate vehicle data
alt Invalid Vehicle Data
    VehicleService --> VehicleController: (7) Return error "Invalid vehicle data"
    deactivate VehicleService
    VehicleController --> AddVehicleForm: (8) Show error message
    deactivate VehicleController
    AddVehicleForm --> User: (9) Display error message
    deactivate AddVehicleForm
else Valid Vehicle Data
    VehicleService -> VehicleDB: (7) Save vehicle details in DB
    activate VehicleDB
    VehicleDB --> VehicleService: (8) Confirm vehicle saved
    deactivate VehicleDB
    VehicleService -> UserDB: (9) Update user's vehicle list
    activate UserDB
    UserDB --> VehicleService: (10) Confirm update success
    deactivate UserDB
    VehicleService --> VehicleController: (11) Return success
    deactivate VehicleService
    VehicleController --> AddVehicleForm: (12) Return success
    deactivate VehicleController
    AddVehicleForm --> User: (13) Display success message
    deactivate AddVehicleForm
end

@enduml